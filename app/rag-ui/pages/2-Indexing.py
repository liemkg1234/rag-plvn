import asyncio

import streamlit as st
from api.rag import index_documents

st.set_page_config(page_title="Document Indexer")

st.title("üìÑ 2. Index Documents (RAG)")


collection_name = st.text_input(
    "Collection Name",
    value="policy_id_xxx",
    help=(
        "T√™n d√πng ƒë·ªÉ l∆∞u collection, ch·ªâ g·ªìm ch·ªØ th∆∞·ªùng, s·ªë, g·∫°ch d∆∞·ªõi. "
        "V√≠ d·ª•: `nghiquyet_42_2017_qh14` t∆∞∆°ng ·ª©ng v·ªõi 'Ngh·ªã Quy·∫øt 42.2017.QH14'."
    )
)

description = st.text_input(
    "Description",
    value="Policy ID xxx - Policy Name - Group Policy Name",
    help="M√¥ t·∫£ chi ti·∫øt cho collection, gi√∫p ph√¢n bi·ªát n·ªôi dung l∆∞u tr·ªØ."
)

uploaded_files = st.file_uploader(
    "Upload documents (.md)",
    type=["md"],
    accept_multiple_files=True
)

if st.button("üöÄ Index Documents"):
    if not uploaded_files or not collection_name:
        st.warning("‚ö†Ô∏è Please provide a collection name and at least one file.")
    else:
        with st.spinner("Indexing in progress..."):
            res = asyncio.run(index_documents(collection_name, description, uploaded_files))

            if res.status_code == 200:
                json_data = res.json()
                returned_collection = json_data.get("collection_name")

                st.success("‚úÖ Documents indexed successfully!")

                if returned_collection:
                    st.markdown(f"""
                    ### üìå Indexed Collection
                    ```
                    {returned_collection}
                    ```
                    """)
                    st.info("üí° You can now query this collection.")
            else:
                st.error(f"‚ùå Failed: {res.status_code} - {res.text}")
